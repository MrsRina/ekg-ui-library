name: CMake Worker

on:
  push:
    branches: [ "version-core" ]
  pull_request:
    branches: [ "version-core" ]

jobs:
  release:  
    name: Release
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
    
      - name: Check if Git is installed
        run: git --version
    
      - name: Check if directory is a Git repository
        run: git rev-parse --is-inside-work-tree
        id: check_git_repo
        continue-on-error: true
    
      - name: Check Commit Message
        id: check_commit_message
        run: echo ::set-output name=message::$(git log --format=%B -n 1 ${{ github.sha }})

      - name: Release Condition
        if: startsWith(steps.check_commit_message.outputs.message, '[release]')
        id: release_condition
        run: exit 0

      - name: Install Ninja
        uses: ashutoshvarma/setup-ninja@master

      - name: Linux Install Libraries
        run: |
          wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list http://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list

          sudo apt-get update
          sudo apt-get install libfreetype6-dev
          sudo apt-get install libsdl2-dev
          sudo apt-get install libglew-dev
          sudo apt-get install vulkan-sdk
          sudo apt-get install mingw-w64

      - name: Configure Linux-CMake
        run: >
          cmake -B ${{ github.workspace }}/cmake-build-debug
          -S ${{ github.workspace }}
          -G Ninja
          -DCMAKE_CXX_COMPILER=g++
          -DEKG_ENABLE_TEST=0
          -DEKG_LINUX_NOT_FOUND_FREETYPE=1

      - name: Build Linux-CMake
        run: |
          cmake --build ${{ github.workspace }}/cmake-build-debug

      - name: Configure Windows-CMake
        run: >
          cmake -B ${{ github.workspace }}/cmake-build-debug
          -S ${{ github.workspace }}
          -G Ninja
          -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++
          -DEKG_ENABLE_TEST=0
          -DEKG_LINUX_NOT_FOUND_FREETYPE=1

      - name: Build Windows-CMake
        run: |
          cmake --build ${{ github.workspace }}/cmake-build-debug
