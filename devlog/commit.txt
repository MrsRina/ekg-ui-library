major.minor.patch major-commit.minor-commit.patch-commit

0.0.1.0.0.1 10/06/23

-- Fixed bug on widgets ::set_width() setting incorrect dimension axis.
-- Fixed bug at frame widget actions (dragging and resizing), now it calculates from visible rect.
-- Symmetric layout processing based on scroll pixels offsets.

0.0.1.0.1.0 11/06/23

-- Added theme options to switch between symmetric or non-symmetric layout processing.
-- Building methods in the frame (soon maybe all widgets should have it).
-- Fixed next flag height for previous height (now it uses the highest height).
-- Added auto-scale factor and widgets resolution scaling factor-based.

0.0.1.0.1.1 11/06/23

-- Auto-scale step interval based.
-- Multi-cursor internal system for textbox.

0.0.1.0.1.2 12/06/23

-- Fixed textbox erasing event when lines are empty.

0.0.1.0.1.3 12/06/23

-- Fixed scrolling priority using parent checks for absolute widgets.
-- Fixed textbox not scrolling.
-- Fixed absolute widget firing other widget events (now it is clamped).

0.0.1.0.1.4 15/06/23

-- Added real-time textbox text changing.
-- Scroll priority between parents and children.
-- Performance fixes (reduced draw calls).

0.0.1.0.1.5 16/06/23

-- Fixed issue with high-frequency scrolling widgets update not stopping.
-- Fixed scrolling clamp desync when a text is updated by UI data.

-- Processing stack swap timing runtime with 14018 widgets! --
-- Resize: (telemetry size, sum) (average timing): 36, 98494    2735
-- No resize: (telemetry size, sum) (average timing): 36, 85866    2385
-- No resize <--- better

-- Fixed OpenGL allocator swapping buffer performance.
-- Fixed issue with font rendering factor & text box UI delay (textbox UI with delay to process stack reorder event).
-- Fixed layout extent checks verifying scroll widget.

0.0.1.0.1.6 20/06/23

-- Fixed performance using indexing rendering for simple shapes.
-- Fixed layout processing extent with next | flag interacting with scrolling widget (previous 0.0.1.0.1.5 fix made a new bug).

0.0.1.0.1.7 25/06/23

-- Fixed horizontal mouse pad scrolling.
-- Fixed children's frame widget resizing.
-- Fixed children frame docking left & right widget resizing.
-- Partial-fix scroll priority.
-- Reduced OpenGL overhead rendering calls.
-- Fixed scroll priority definitely.
-- Multi-cursor textbox UI-based system (select box disabled temporarily).

0.0.1.0.1.8 29/06/23

-- Multi-cursor selection box rendering.
-- Fixed step scale system.
-- Temp fix resizing default window scale.
-- Added system mouse feature.
-- Fixed multi-cursor rendering empty line selection box.
-- Reduced overhead service & gpu allocator getters calls.
-- Reduced overhead input calls.
-- Fixed scrolling bug on slider widget (increase/decrease actions).
-- Added tab size ui feature per widget data.
-- Added feature movement select textbox widget.
-- Fixed slider scrolling & dragging abs state.
-- Fixed rendering issue with scissors.
-- Added feature movements by nearest word from textbox.
-- Added absolute input statement feature.

0.0.1.0.2.0 09/07/23

-- Fixed blending state off at on render runtime call.
-- Better alloc/realloc batching performance.
-- Added modifier entry field features (breakline + modifier, addline + modifier, erasetext + modifier + select, select)
-- Fixed texture glitch behavior at end of allocator draw calls.
-- Added clipboard functions (paste, copy & cut).
-- Added erase line by modifier feature (lctrl + shift + delete/backspace).

0.0.1.0.3.0 02/08/23

-- Better handler performance.
-- Added descriptors object state-based for tasks handler.
-- Refactored utility part of code.
-- Fixed textbox bizzare behavior with cursors (all textbox(s) were working simultaneous).
-- Now you can select the text at end of chunk text without hovering the text rect necessary.
-- Fixed not automatically filling and jumping at end of text when cursor is selecting.
-- Fixed select action when moving at end of a line, now no longer crashes.
-- Insane performance optmization for textbox (over 60k lines).
-- Fixed cursor not rendering when the textbox was initially created empty.
-- Buildable UI(s) data style for all widgets.
-- Reduced lines of code from popup widget and the bloat part between compoent x element (as before).
-- Removed useless bloat code from geometry and layout service (grid etc).